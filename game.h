#ifndef GAME_H
#define GAME_H
#include <QString>
#include <QVector>
class Game{
QString arr[4];
public:
    int t;
    int MovesLeft;
    QVector<int> InitiativeStack;
    bool CheatIsAllowed;
    int unitid;//Текущие координаты юнита получаемые из таблицы
    //Массив содержащий в себе расположение войск.
    QString GameBoard[9][5];
    /*******************************************
     *  Массив содержащий информацию о юнитах. *
     *-----------------------------------------*
     *  Столбцы массива:                       *
     *                                         *
     *  0) Имя юнита                           *
     *  1) Текущее здоровье юнита              *
     *  2) Максимальное здоровье юнита         *
     *  3) Урон юнита                          *
     *  4) Защита юнита                        *
     *  5) Скорость юнита                      *
     *  6) Дальность атаки юнита               *
     *  7) Координата x юнита                  *
     *  8) Координата y юнита                  *
     *  9) Принадлежность игроку               *
     *  10) Инициатива                         *
     *  11) Манна\Ярость\Энергия               *
     *  12) Максимальная Манна\Ярость\Энергия  *
     *  13) Количество                         *
     *******************************************/
    int Stats[20][13];
    int Stats1[10][14];
    //Функция которая возвращает имя персонажа
    QString CheckName(int name);
    //Функция для инициализации статистики
    void InitialiseStats();
    void InitialiseStats1();
    //Функция базового размещения
    void NewGame();
    void NewGame1();
    /*********************************************************
     *   Функция для проверки правильности хода.             *
     *-------------------------------------------------------*
     *   xam - смещение по оси x, yam - смещение по оси y.   *
     *********************************************************/
    QString* CheckMove(int xam,int yam);
    QString* CheckMove1(int xam,int yam);
    /****************************************************************
     *  Функция для проверки нанесенного урона и возможности атаки. *
     *--------------------------------------------------------------*
     *  targx,targy - координаты атакуемого юнита.                  *
     ****************************************************************/
    QString* CheckDamage(int targx, int targy);
    QString* CheckDamage1(int targx, int targy);
    //Функция для закидывания юнитов в стек
    void UnitStack();
    void UnitStack1();
    Game();
};
#endif // GAME_H
